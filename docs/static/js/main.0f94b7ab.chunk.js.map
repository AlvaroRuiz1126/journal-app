{"version":3,"sources":["components/types/types.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRouter.js","routers/PrivateRouter.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","sanpHijo","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileURL","close","startUploading","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startDeleting","NothingSelected","setError","error","finishLoading","login","startLoginWithEmailPassword","email","password","signInWithEmailAndPassword","then","user","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","msgError","confirm","isValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPassword","AuthRouter","path","component","PublicRouter","isAuthenticated","Component","rest","props","PrivateRouter","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0f94b7ab.chunk.js","sourcesContent":["export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start Loading',\n    uiFinishLoading: '[UI] Finish Loading',\n\n    notesAddNew: '[NOTES] New Note',\n    notesActive: '[NOTES] Set Active Note',\n    notesLoad: '[NOTES] Load Note',\n    notesUpdated: '[NOTES] Updated Note',\n    notesFileURL: '[NOTES] Updated Image URL',\n    notesDelete: '[NOTES] Delete Note',\n    notesLogoutCleaning: '[NOTES] Logout Cleaning'\n};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBQE8z6jHtQMaWoAnYQULcIs1W9_Zlz-Ds\",\n    authDomain: \"react-app-55abd.firebaseapp.com\",\n    databaseURL: \"https://react-app-55abd.firebaseio.com\",\n    projectId: \"react-app-55abd\",\n    storageBucket: \"react-app-55abd.appspot.com\",\n    messagingSenderId: \"363670284184\",\n    appId: \"1:363670284184:web:67532b31718d2273ebaded\"\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n};","export const fileUpload = async(file) => {\n    const cloudURL = 'https://api.cloudinary.com/v1_1/depstfg0u/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        const resp = await fetch(cloudURL,{\n            method: 'POST',\n            body: formData\n        });\n\n        if(resp.ok){\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        }else{\n            //me permite ver el error si algo malo sucede en la peticion\n            throw await resp.json();\n        }\n\n    } catch (error) {\n        //console.log(error);\n        throw error;\n    }\n};","import { db } from \"../firebase/firebase-config\";\n\nexport const loadNotes = async(uid) => {\n    //.get() me permite obtener los valores dentre de la collection de firetore\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n    const notes = [];\n    //console.log(notesSnap);\n\n    notesSnap.forEach(sanpHijo => {\n        //console.log(sanpHijo.data());\n        notes.push({\n            id: sanpHijo.id,\n            ...sanpHijo.data()\n        });\n    });\n\n    //console.log(notes);\n    return notes;\n};","import Swal from 'sweetalert2';\nimport { types } from \"../components/types/types\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from \"../helpers/loadNotes\";\n//react-journal\n//Tarea asincrona ya que se hace la peticion en la base de datos de firebase\nexport const startNewNote = () => {\n    return async(dispatch, getState) => {\n        //para grabar en firestore se necesita el uid\n        //con la funcion getState se obtiene el state del redux, muy perecido al useSelector\n        const uid = getState().auth.uid;\n        //console.log(uid);\n        const note = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        };\n\n        //con esta instruccion se inserta en la base de datos de firestore\n        const doc = await db.collection(`${uid}/journal/notes`).add(note);\n        //console.log(doc);\n        //esta accion recibe el id que se crea qn firestore que viene en doc.id, y la nota que se le envia\n        dispatch(activeNote(doc.id, note));\n        dispatch(addNewNote(doc.id, note));\n    };\n};\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const startLoadingNotes = (uid) => {\n    return async(dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNotes(notes));\n    };\n};\n\nexport const setNotes = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = (note) => {\n    return async(dispatch, getState) => {\n        const uid = getState().auth.uid;\n        if(!note.url){\n            delete note.url;\n        }\n        //se le hace un clon al objeto que llega para no modificar el id de la nota cuando se va actualizar\n        const noteToFirestore = {...note};\n        //elmina la propiedad id del objeto, para eso sirve el delete\n        delete noteToFirestore.id;\n        //aca en la url del dc usamos el id de la nota que llega ocmo parametro\n        //el .update(dato a almacenar) es la funcion para acutalizar\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n        dispatch(refreshNote(note.id, noteToFirestore));\n        Swal.fire('Saved', note.title, 'success');\n    };\n};\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = (file) => {\n    return async(dispatch, getState) => {\n        const {active} = getState().notes;\n        Swal.fire({\n            title: 'Uploadin...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n        //console.log(active, file);\n        const fileURL = await fileUpload(file);\n        //console.log(fileURL);\n        active.url = fileURL;\n\n        dispatch(startSaveNote(active));\n        Swal.close();\n    };\n};\n\nexport const startDeleting = (id) => {\n    return async(dispatch, getState) => {\n        const {uid} = getState().auth;\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n        dispatch(deleteNote(id));\n    };\n};\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteCleaning = () => ({\n    type: types.notesLogoutCleaning\n});","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    //Para resetear los valores del formulario con los que uno quiera\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState);\n    };\n\n    const handleInputChange = ({target}) => {\n        //console.log(target.name);\n        setValues({\n            ...values ,\n            [target.name]: target.value\n        });\n    };\n\n    return [values, handleInputChange, reset];\n};","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n    const dispatch = useDispatch();\n    const {active} = useSelector(state => state.notes)\n\n    const handleFileChange = (e) => {\n        //console.log(e.target);\n        const file = e.target.files[0];\n\n        if(file){\n            dispatch(startUploading(file));\n        }\n    };\n\n    const handlePictureClick = () => {\n        //console.log('Click');\n        //esta linea simula elevento del clic con el id de fileSelector\n        document.querySelector('#fileSelector').click();\n    };\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    };\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>26 de Octubre del 2020</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{display:\"none\"}}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={handlePictureClick}\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\"\n                    onClick={handleSave}\n                >\n                    Save\n                </button>\n            </div>\n            \n        </div>\n    );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\n\nexport const NoteScreen = () => {\n    const dispatch = useDispatch();\n    const {active} = useSelector(state => state.notes);\n    //console.log(active);\n\n    const [values, handleInputChange, reset] = useForm(active);\n    //console.log(values);\n    const {body, title, id} = values;\n\n    //El useRef recibe una variable mutable que no va redibujar todo el componente si ella cambia\n    const activeId = useRef(active.id);\n\n    const handleDelete = () => {\n        dispatch(startDeleting(id));\n    };\n\n    //permite no crear un bucle infinito con la nota activa\n    useEffect(() => {\n        if(active.id !== activeId.current){\n            reset(active);\n            activeId.current = active.id;\n        }\n    }, [active, reset]);\n\n    useEffect(() => {\n        //console.log(values);\n        dispatch(activeNote(values.id, {...values}));\n    }, [values, dispatch]);\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    value={title}\n                    name=\"title\"\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happend today?\"\n                    className=\"notes__textarea\"\n                    value={body}\n                    name=\"body\"\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {\n                    (active.url) &&\n                    <div className=\"notes__image\">\n                        <img\n                            src={active.url}\n                            alt=\"Imagen\"\n                        />\n                    </div>\n                }\n            </div>\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={handleDelete}\n            >\n                Delete\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select Something\n                <br />\n                or create Entry\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    );\n};","import { types } from \"../components/types/types\";\n\nexport const setError = (error) => {\n    return {\n        type: types.uiSetError,\n        payload: error\n    };\n};\n\nexport const removeError = () => {\n    return {\n        type: types.uiRemoveError\n    }\n};\n\nexport const startLoading = () => {\n    return {\n        type: types.uiStartLoading\n    };\n};\n\nexport const finishLoading = () => {\n    return {\n        type: types.uiFinishLoading\n    };\n};","import {types} from './../components/types/types';\nimport {firebase, googleAuthProvider} from './../firebase/firebase-config';\nimport { finishLoading, startLoading } from './ui';\nimport Swal from 'sweetalert2';\nimport { noteCleaning } from './notes';\n\nexport const login = (uid, name) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            name\n        }\n    };\n};\n\nexport const startLoginWithEmailPassword = (email, password) => {\n    return (dispatch) => {\n        // setTimeout(() => {\n        //     dispatch(login(123, 'alvaro'));\n        // }, 3500);\n        dispatch(startLoading());\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({user}) => {\n                dispatch(login(user.uid, user.displayName));\n                //se debe colocar dentro de la promesa porque si se coloca fuera se ejecuta de manera sincrona con el anterior dispatch\n                dispatch(finishLoading());\n            }).catch(e => {\n                //console.log(e)\n                dispatch(finishLoading());\n                Swal.fire('Error', e.message, 'error');\n            });\n    };\n};\n\nexport const startRegisterWithEmailPassword = (email, password, name) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async({user}) => {\n                await user.updateProfile({displayName: name});\n                dispatch(login(user.uid, user.displayName));\n                //console.log(user);\n                //console.log(userCred);\n                //dispatch(login(user.uid, user.displayName))\n            })\n            .catch(e => {\n                //console.log(e)\n                Swal.fire('Error', e.message, 'error');\n            });\n    };\n};\n\nexport const startGoogleLogin = () => {\n    //el Popup devuelve unas credenciales de usuario\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n        .then(({user}) => {\n            //console.log(userCred);\n            dispatch(login(user.uid, user.displayName))\n        });\n    };\n};\n\nexport const startLogout = () => {\n    //esta funcion es asincrona ebido a que se debe esperar a que la accion se ejecute en firebase\n    return async(dispatch) => {\n        await firebase.auth().signOut();\n        dispatch(logout());\n        dispatch(noteCleaning());\n    };\n};\n\n//esta funcion devuelve un objeto vacio para reestablecer las credenciales\nexport const logout = () => {\n    return {\n        type: types.logout\n    };\n};","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({id, title, body, date, url}) => {\n    //console.log(id, title, body, date, url);\n    const dispatch = useDispatch();\n    const noteDate = moment(date);\n    //console.log(noteDate);\n\n    const hanldeEntryClick = () => {\n        dispatch(activeNote(id, {title, body, date, url}));\n    };\n\n    return (\n        <div \n            className=\"journal__entry pointer\"\n            onClick={hanldeEntryClick}\n        >\n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">{title}</p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('d')}</h4>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n    //const entries = [1,2,3,4,5,6,7,8,9,10];\n    const {notes} = useSelector(state => state.notes);\n    //console.log(notes);\n\n    return (\n        <div className=\"journal__entries\">\n            {\n                notes.map(note => (\n                    <JournalEntry \n                        key={note.id}\n                        {...note}\n                    />\n                ))\n            }\n        </div>\n    );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { JournalEntries } from './JournalEntries';\nimport { startNewNote } from './../../actions/notes';\n\nexport const Sidebar = () => {\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth);\n    \n    const hanldeLogout = () => {\n        dispatch(startLogout());\n    };\n\n    const handleAddEntry = () => {\n        dispatch(startNewNote());\n    };\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={hanldeLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={handleAddEntry}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">New Entry</p>\n            </div>\n\n            <JournalEntries />\n        </aside>\n    );\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = () => {\n    const {active} = useSelector(state => state.notes)\n    return (\n        <div className=\"journal__main-content\">\n            <Sidebar />\n\n            <main>\n                {/* <NothingSelected /> */}\n                {\n                    (active)\n                        ? (<NoteScreen />)\n                        : (<NothingSelected />)\n                }\n                \n            </main>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startGoogleLogin, startLoginWithEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n    const [values, handleInputChange] = useForm({\n        email: 'email@email.com',\n        password: '123456'\n    });\n\n    const {email, password} = values;\n\n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.ui);\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        //console.log(email, password);\n        //dispatch(login(12345, 'Alvaro'));\n        dispatch(startLoginWithEmailPassword(email, password));\n    };\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin());\n    };\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n            <form \n                onSubmit={handleLogin}\n                className=\"animate__animated animate__fadeIn\"\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                />\n\n                {/* El disabled deshabilita el boton */}\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div \n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create New Account\n                </Link>\n            </form>\n        </>\n    );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPassword } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n    const dispatch = useDispatch();\n    //el useSelector devuelve el state del reducer de redux. recibe como parametro un callback (funcion)\n    const {msgError} = useSelector(state => state.ui);\n    //console.log(msgError);\n\n    const [values, handleInputChange] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        confirm: ''\n    });\n\n    const {name, email, password, confirm} = values;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        //console.log(name, email, password, confirm);\n        if(isValid()){\n            //console.log(\"hola\");\n            dispatch(startRegisterWithEmailPassword(email, password, name));\n        }\n    };\n\n    const isValid = () => {\n        if(name.trim().length === 0){\n            //console.log(\"name is required\");\n            dispatch(setError(\"name is required\"));\n            return false;\n        }else if(!validator.isEmail(email)){\n            //el validator es una libreria que nos sirve para validar el email que se digite\n            //console.log(\"Email is not valid\");\n            dispatch(setError(\"Email is not valid\"));\n            return false;\n        }else if(password !== confirm || password.length < 5){\n            //console.log(\"Password shuold be at least 6 characters and match each other\");\n            dispatch(setError(\"Password shuold be at least 6 characters and match each other\"));\n            return false;\n        }\n\n        dispatch(removeError());\n\n        return true;\n    };\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n            <form>\n                { \n                    msgError && \n                        (   \n                            <div className=\"auth__alert-error\">\n                                {msgError}\n                            </div>\n                        )\n                }\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n                \n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"confirm\"\n                    value={confirm}\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                />\n\n                {/* El disabled deshabilita el boton */}\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    onClick={handleRegister}\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login \"\n                    className=\"link\"\n                >\n                    Already Register?\n                </Link>\n            </form>\n        </>\n    );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route\n                        path=\"/auth/login\"\n                        component={LoginScreen}\n                    />\n\n                    <Route\n                        path=\"/auth/register\"\n                        component={RegisterScreen}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/\" />\n            )}\n        />\n    );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/auth/login\" />\n            )}\n        />\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { firebase } from './../firebase/firebase-config';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PublicRouter } from './PublicRouter';\nimport { PrivateRouter } from './PrivateRouter';\n//import { loadNotes } from '../helpers/loadNotes';\nimport {\n    //setNotes,\n    startLoadingNotes \n} from '../actions/notes';\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    //Route,\n    Switch,\n} from \"react-router-dom\";\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const [cheking, setCheking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        //el onAuthStateChanged regresa un objeto especial que se puede disparar mas de una vez\n        firebase.auth().onAuthStateChanged(async(user) => {\n            //se coloca el asynx-await por lo que esto es una promesa\n            //console.log(user)\n            if (user?.uid){\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n                //llamamos la funcion aca porque es en el momento en que se tiene el id del usuario\n                dispatch(startLoadingNotes(user.uid));\n            }else{\n                setIsLoggedIn(false);\n            }\n\n            setCheking(false);\n        })\n    }, [dispatch, setCheking, setIsLoggedIn]);\n    //si no se tiene una dependencia en el effect, solo se dispara una vez\n\n    if(cheking){\n        return (<h1>Espere...</h1>);\n    }\n    //console.log(isLoggedIn);\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRouter\n                        path=\"/auth\"\n                        component={AuthRouter}\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRouter\n                        exact\n                        path=\"/\"\n                        component={JournalScreen}\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import { types } from \"../components/types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            };\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            };\n        \n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            };\n    \n        default:\n            return state;\n    }\n};","import { types } from \"../components/types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n};\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            };\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            };\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            };\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            };\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            };\n\n        case types.notesLogoutCleaning:\n            return {};\n\n        default:\n            return state;\n    }\n};\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport thunk from 'redux-thunk';\nimport { notesReducer } from '../reducers/notesReducer';\n\n//esta linea viene de la documentacion de redux devtools. Esto permite poder utilizar la extension de redux y ademas los middlewares\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n//este es el archivo de la fuente unica de verdad, aca se almacenan todos los reducers que contorlaran todas las acciones\n//primero declaramos el combineReducers para poder pasar varios reducers a la funciones createStore\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n//esta funcion crea el store con los reducers que se implementaran en la aplicacion. Recibe solo reducers\nexport const store = createStore(\n    reducers,\n    //se comenta porque ya tenemos el composeEnhancer\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    composeEnhancers(\n        //habilita los middlewares\n        applyMiddleware(thunk)\n    )\n);","import { types } from \"../components/types/types\";\n\n//creamos el reducer como normalmente lo hemos venido realizando, para el control de las acciones\nexport const authReducer = (state = {}, action) => {\n    switch(action.type){\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.name\n            };\n\n        case types.logout:\n            return {};\n        \n        default:\n            return state;\n    }\n}","import React from 'react'\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <div>\n            {/* El provider cumple la misma funcion que cuando lo vimos con el useReducer */}\n            <Provider store={store}>\n                <AppRouter />\n            </Provider>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}